{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AzDF2020"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File Data From Http Server",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ""
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "movie",
											"type": "String"
										},
										"sink": {
											"name": "movie",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "genres",
											"type": "String"
										},
										"sink": {
											"name": "genres",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String"
										},
										"sink": {
											"name": "year",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Rating",
											"type": "String"
										},
										"sink": {
											"name": "Rating",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Rotton Tomato",
											"type": "String"
										},
										"sink": {
											"name": "Rotton Tomato",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_HttpServer_File",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureDataLakeG2",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HttpServer_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureDataLakeG2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureDataLakeG2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeG2",
					"type": "LinkedServiceReference",
					"parameters": {
						"BlobURI": {
							"value": "https://azdlgv2.dfs.core.windows.net",
							"type": "Expression"
						}
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Httpfile",
						"fileSystem": {
							"value": "test",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Dataflow_DL_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeG2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sink",
						"fileSystem": "test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_HttpServer_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_HttpServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_HttpServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_HttpServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "https://raw.githubusercontent.com/djpmsft/adf-ready-demo/master/moviesDB.csv",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataCleansing')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AzureDataLakeG2",
								"type": "DatasetReference"
							},
							"name": "DataLakeSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_Dataflow_DL_Sink",
								"type": "DatasetReference"
							},
							"name": "DataLakeSink"
						}
					],
					"transformations": [
						{
							"name": "RenameColumns"
						},
						{
							"name": "FilterDate"
						},
						{
							"name": "AddNewColumn"
						},
						{
							"name": "RearrangeColumns"
						},
						{
							"name": "RankMoviesByRatings"
						},
						{
							"name": "RearrangeColumnsAgain"
						},
						{
							"name": "Aggregate"
						},
						{
							"name": "ModifyColumnsDataTypes",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "AlterRow"
						}
					],
					"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tpartitionBy('hash', 1)) ~> DataLakeSource\nDataLakeSource select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\t{Rotten Tomato} = {Rotton Tomato}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumns\nRenameColumns filter(toInteger(year)>1950) ~> FilterDate\nFilterDate derive(PrimaryGenre = iif(locate('|', genres)>1,left(genres, locate('|',genres)-1) , genres),\n\t\tLoadDate = currentDate()) ~> AddNewColumn\nAddNewColumn select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tPrimaryGenre,\n\t\tyear,\n\t\t{Rotten Tomato},\n\t\tDataLoadDate = LoadDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RearrangeColumns\nRearrangeColumns window(over(PrimaryGenre,\n\t\tyear),\n\tdesc({Rotten Tomato}, true),\n\tRatingsRank = rank()) ~> RankMoviesByRatings\nRankMoviesByRatings select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tPrimaryGenre,\n\t\tyear,\n\t\t{Rotten Tomato},\n\t\tRatingsRank,\n\t\tDataLoadDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RearrangeColumnsAgain\nModifyColumnsDataTypes aggregate(groupBy(PrimaryGenre,\n\t\tyear),\n\tAverageRating = round(avg({Rotten Tomato}), 2),\n\t\tHighestRated = first(title),\n\t\tLowestRated = last(title),\n\t\tNumberOfMovies = count()) ~> Aggregate\nRearrangeColumnsAgain derive(movie = toInteger(movie),\n\t\t{Rotten Tomato} = toInteger({Rotten Tomato}),\n\t\tRatingsRank = toInteger({RatingsRank})) ~> ModifyColumnsDataTypes\nAggregate alterRow(upsertIf(true())) ~> AlterRow\nAlterRow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdateFormat:'yyyy-MM-dd',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DataLakeSink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AzureDataLakeG2')]",
				"[concat(variables('factoryId'), '/datasets/DS_Dataflow_DL_Sink')]"
			]
		}
	]
}