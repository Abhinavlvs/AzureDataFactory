{
	"name": "DataCleansing",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_AzureDataLakeG2",
						"type": "DatasetReference"
					},
					"name": "DataLakeSource"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "RenameColumns"
				},
				{
					"name": "FilterDate"
				},
				{
					"name": "AddNewColumn"
				},
				{
					"name": "RearrangeColumns"
				},
				{
					"name": "RankMoviesByRatings"
				},
				{
					"name": "RearrangeColumnsAgain"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tpartitionBy('hash', 1)) ~> DataLakeSource\nDataLakeSource select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\t{Rotten Tomato} = {Rotton Tomato}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumns\nRenameColumns filter(toInteger(year)>1950) ~> FilterDate\nFilterDate derive(PrimaryGenre = iif(locate('|', genres)>1,left(genres, locate('|',genres)-1) , genres),\n\t\tLoadDate = currentDate()) ~> AddNewColumn\nAddNewColumn select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tPrimaryGenre,\n\t\tyear,\n\t\t{Rotten Tomato},\n\t\tDataLoadDate = LoadDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RearrangeColumns\nRearrangeColumns window(over(PrimaryGenre,\n\t\tyear),\n\tdesc({Rotten Tomato}, true),\n\tRatingsRank = rank()) ~> RankMoviesByRatings\nRankMoviesByRatings select(mapColumn(\n\t\tmovie,\n\t\ttitle,\n\t\tgenres,\n\t\tPrimaryGenre,\n\t\tyear,\n\t\t{Rotten Tomato},\n\t\tRatingsRank,\n\t\tDataLoadDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RearrangeColumnsAgain\nRearrangeColumnsAgain aggregate(groupBy(PrimaryGenre,\n\t\tyear),\n\tPrimaryGenre = ERROR_FUNCTION('')) ~> Aggregate1"
		}
	}
}